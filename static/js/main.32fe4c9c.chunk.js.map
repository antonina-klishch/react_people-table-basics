{"version":3,"sources":["App.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["getClassLink","isActive","classNames","App","useLocation","pathname","to","replace","className","role","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","listName","map","human","name","personSlug","useParams","getSlug","personName","man","find","slug","sex","born","died","motherName","includes","fatherName","PeopleTable","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","length","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index"],"mappings":"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","file":"static/js/main.32fe4c9c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\nimport {\n  Navigate,\n  Outlet,\n  useLocation,\n  NavLink,\n} from 'react-router-dom';\n\nconst getClassLink = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/home') {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getClassLink}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={getClassLink}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const listName = people.map(human => human.name);\n\n  const { personSlug } = useParams();\n\n  const getSlug = (personName: string) => {\n    const man = people.find(human => human.name === personName);\n\n    return man?.slug;\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          person.motherName && listName.includes(person.motherName) ? (\n            <Link\n              to={`../${getSlug(person.motherName)}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          ) : (\n            person.motherName || '-'\n          )\n        }\n      </td>\n      <td>\n        {\n          person.fatherName && listName.includes(person.fatherName) ? (\n            <Link\n              to={`../${getSlug(person.fatherName)}`}\n            >\n              {person.fatherName}\n            </Link>\n          ) : (\n            person.fatherName || '-'\n          )\n        }\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {people.map((person) => (\n          <PersonLink\n            person={person}\n            people={people}\n            key={person.name}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../../types';\nimport { getPeople } from '../../../api';\nimport { PeopleTable } from '../../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleTable people={people} />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n          {(people.length === 0 && !isError && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\nimport { PeoplePage } from './components/Loader/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\">\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}